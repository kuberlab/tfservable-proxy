// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tensorflow/core/example/example_parser_configuration.proto

package example

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import tensorflow "github.com/kuberlab/tfservable-proxy/pkg/tensorflow/core/framework"
import tensorflow3 "github.com/kuberlab/tfservable-proxy/pkg/tensorflow/core/framework"
import tensorflow2 "github.com/kuberlab/tfservable-proxy/pkg/tensorflow/core/framework"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type VarLenFeatureProto struct {
	Dtype                   tensorflow2.DataType `protobuf:"varint,1,opt,name=dtype,enum=tensorflow.DataType" json:"dtype,omitempty"`
	ValuesOutputTensorName  string               `protobuf:"bytes,2,opt,name=values_output_tensor_name,json=valuesOutputTensorName" json:"values_output_tensor_name,omitempty"`
	IndicesOutputTensorName string               `protobuf:"bytes,3,opt,name=indices_output_tensor_name,json=indicesOutputTensorName" json:"indices_output_tensor_name,omitempty"`
	ShapesOutputTensorName  string               `protobuf:"bytes,4,opt,name=shapes_output_tensor_name,json=shapesOutputTensorName" json:"shapes_output_tensor_name,omitempty"`
}

func (m *VarLenFeatureProto) Reset()                    { *m = VarLenFeatureProto{} }
func (m *VarLenFeatureProto) String() string            { return proto.CompactTextString(m) }
func (*VarLenFeatureProto) ProtoMessage()               {}
func (*VarLenFeatureProto) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *VarLenFeatureProto) GetDtype() tensorflow2.DataType {
	if m != nil {
		return m.Dtype
	}
	return tensorflow2.DataType_DT_INVALID
}

func (m *VarLenFeatureProto) GetValuesOutputTensorName() string {
	if m != nil {
		return m.ValuesOutputTensorName
	}
	return ""
}

func (m *VarLenFeatureProto) GetIndicesOutputTensorName() string {
	if m != nil {
		return m.IndicesOutputTensorName
	}
	return ""
}

func (m *VarLenFeatureProto) GetShapesOutputTensorName() string {
	if m != nil {
		return m.ShapesOutputTensorName
	}
	return ""
}

type FixedLenFeatureProto struct {
	Dtype                  tensorflow2.DataType         `protobuf:"varint,1,opt,name=dtype,enum=tensorflow.DataType" json:"dtype,omitempty"`
	Shape                  *tensorflow.TensorShapeProto `protobuf:"bytes,2,opt,name=shape" json:"shape,omitempty"`
	DefaultValue           *tensorflow3.TensorProto     `protobuf:"bytes,3,opt,name=default_value,json=defaultValue" json:"default_value,omitempty"`
	ValuesOutputTensorName string                       `protobuf:"bytes,4,opt,name=values_output_tensor_name,json=valuesOutputTensorName" json:"values_output_tensor_name,omitempty"`
}

func (m *FixedLenFeatureProto) Reset()                    { *m = FixedLenFeatureProto{} }
func (m *FixedLenFeatureProto) String() string            { return proto.CompactTextString(m) }
func (*FixedLenFeatureProto) ProtoMessage()               {}
func (*FixedLenFeatureProto) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *FixedLenFeatureProto) GetDtype() tensorflow2.DataType {
	if m != nil {
		return m.Dtype
	}
	return tensorflow2.DataType_DT_INVALID
}

func (m *FixedLenFeatureProto) GetShape() *tensorflow.TensorShapeProto {
	if m != nil {
		return m.Shape
	}
	return nil
}

func (m *FixedLenFeatureProto) GetDefaultValue() *tensorflow3.TensorProto {
	if m != nil {
		return m.DefaultValue
	}
	return nil
}

func (m *FixedLenFeatureProto) GetValuesOutputTensorName() string {
	if m != nil {
		return m.ValuesOutputTensorName
	}
	return ""
}

type FeatureConfiguration struct {
	// Types that are valid to be assigned to Config:
	//	*FeatureConfiguration_FixedLenFeature
	//	*FeatureConfiguration_VarLenFeature
	Config isFeatureConfiguration_Config `protobuf_oneof:"config"`
}

func (m *FeatureConfiguration) Reset()                    { *m = FeatureConfiguration{} }
func (m *FeatureConfiguration) String() string            { return proto.CompactTextString(m) }
func (*FeatureConfiguration) ProtoMessage()               {}
func (*FeatureConfiguration) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

type isFeatureConfiguration_Config interface {
	isFeatureConfiguration_Config()
}

type FeatureConfiguration_FixedLenFeature struct {
	FixedLenFeature *FixedLenFeatureProto `protobuf:"bytes,1,opt,name=fixed_len_feature,json=fixedLenFeature,oneof"`
}
type FeatureConfiguration_VarLenFeature struct {
	VarLenFeature *VarLenFeatureProto `protobuf:"bytes,2,opt,name=var_len_feature,json=varLenFeature,oneof"`
}

func (*FeatureConfiguration_FixedLenFeature) isFeatureConfiguration_Config() {}
func (*FeatureConfiguration_VarLenFeature) isFeatureConfiguration_Config()   {}

func (m *FeatureConfiguration) GetConfig() isFeatureConfiguration_Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *FeatureConfiguration) GetFixedLenFeature() *FixedLenFeatureProto {
	if x, ok := m.GetConfig().(*FeatureConfiguration_FixedLenFeature); ok {
		return x.FixedLenFeature
	}
	return nil
}

func (m *FeatureConfiguration) GetVarLenFeature() *VarLenFeatureProto {
	if x, ok := m.GetConfig().(*FeatureConfiguration_VarLenFeature); ok {
		return x.VarLenFeature
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*FeatureConfiguration) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _FeatureConfiguration_OneofMarshaler, _FeatureConfiguration_OneofUnmarshaler, _FeatureConfiguration_OneofSizer, []interface{}{
		(*FeatureConfiguration_FixedLenFeature)(nil),
		(*FeatureConfiguration_VarLenFeature)(nil),
	}
}

func _FeatureConfiguration_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*FeatureConfiguration)
	// config
	switch x := m.Config.(type) {
	case *FeatureConfiguration_FixedLenFeature:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.FixedLenFeature); err != nil {
			return err
		}
	case *FeatureConfiguration_VarLenFeature:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.VarLenFeature); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("FeatureConfiguration.Config has unexpected type %T", x)
	}
	return nil
}

func _FeatureConfiguration_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*FeatureConfiguration)
	switch tag {
	case 1: // config.fixed_len_feature
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FixedLenFeatureProto)
		err := b.DecodeMessage(msg)
		m.Config = &FeatureConfiguration_FixedLenFeature{msg}
		return true, err
	case 2: // config.var_len_feature
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(VarLenFeatureProto)
		err := b.DecodeMessage(msg)
		m.Config = &FeatureConfiguration_VarLenFeature{msg}
		return true, err
	default:
		return false, nil
	}
}

func _FeatureConfiguration_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*FeatureConfiguration)
	// config
	switch x := m.Config.(type) {
	case *FeatureConfiguration_FixedLenFeature:
		s := proto.Size(x.FixedLenFeature)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *FeatureConfiguration_VarLenFeature:
		s := proto.Size(x.VarLenFeature)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ExampleParserConfiguration struct {
	FeatureMap map[string]*FeatureConfiguration `protobuf:"bytes,1,rep,name=feature_map,json=featureMap" json:"feature_map,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *ExampleParserConfiguration) Reset()                    { *m = ExampleParserConfiguration{} }
func (m *ExampleParserConfiguration) String() string            { return proto.CompactTextString(m) }
func (*ExampleParserConfiguration) ProtoMessage()               {}
func (*ExampleParserConfiguration) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *ExampleParserConfiguration) GetFeatureMap() map[string]*FeatureConfiguration {
	if m != nil {
		return m.FeatureMap
	}
	return nil
}

func init() {
	proto.RegisterType((*VarLenFeatureProto)(nil), "tensorflow.VarLenFeatureProto")
	proto.RegisterType((*FixedLenFeatureProto)(nil), "tensorflow.FixedLenFeatureProto")
	proto.RegisterType((*FeatureConfiguration)(nil), "tensorflow.FeatureConfiguration")
	proto.RegisterType((*ExampleParserConfiguration)(nil), "tensorflow.ExampleParserConfiguration")
}

func init() {
	proto.RegisterFile("tensorflow/core/example/example_parser_configuration.proto", fileDescriptor1)
}

var fileDescriptor1 = []byte{
	// 531 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x94, 0x4f, 0x6f, 0xd3, 0x4c,
	0x10, 0xc6, 0xbb, 0x49, 0x53, 0xbd, 0x9d, 0xbc, 0x25, 0x60, 0x55, 0x6d, 0x1a, 0x21, 0x14, 0x45,
	0x02, 0x45, 0x88, 0xc6, 0x92, 0x91, 0x2a, 0x5a, 0x38, 0x05, 0x5a, 0xe5, 0x00, 0x25, 0x32, 0x55,
	0x91, 0xb8, 0xac, 0xb6, 0xc9, 0xd8, 0xb5, 0x12, 0x7b, 0x57, 0xeb, 0x75, 0x5a, 0x9f, 0xf9, 0x56,
	0x7c, 0x10, 0xbe, 0x06, 0x07, 0x2e, 0x1c, 0x91, 0x77, 0x4d, 0xeb, 0x24, 0x4e, 0x38, 0x70, 0x4a,
	0xb4, 0xf3, 0x7b, 0xe6, 0xcf, 0xe3, 0xdd, 0x81, 0x13, 0x85, 0x51, 0xcc, 0xa5, 0x37, 0xe5, 0x37,
	0xf6, 0x88, 0x4b, 0xb4, 0xf1, 0x96, 0x85, 0x62, 0x7a, 0xf7, 0x4b, 0x05, 0x93, 0x31, 0x4a, 0x3a,
	0xe2, 0x91, 0x17, 0xf8, 0x89, 0x64, 0x2a, 0xe0, 0x51, 0x4f, 0x48, 0xae, 0xb8, 0x05, 0xf7, 0xda,
	0xd6, 0x8b, 0xc5, 0x3c, 0x9e, 0x64, 0x21, 0xde, 0x70, 0x39, 0xb1, 0x4d, 0x84, 0xc6, 0xd7, 0x4c,
	0xa0, 0x51, 0xb6, 0x9e, 0xfd, 0x8d, 0xce, 0xb9, 0xa7, 0x6b, 0xb8, 0x54, 0x60, 0x6c, 0xb0, 0xce,
	0x4f, 0x02, 0xd6, 0x25, 0x93, 0xef, 0x31, 0x3a, 0x43, 0xa6, 0x12, 0x89, 0x43, 0xdd, 0xdf, 0x73,
	0xa8, 0x8d, 0x33, 0xac, 0x49, 0xda, 0xa4, 0xfb, 0xc0, 0xd9, 0xed, 0xdd, 0x67, 0xeb, 0xbd, 0x63,
	0x8a, 0x5d, 0xa4, 0x02, 0x5d, 0x83, 0x58, 0xc7, 0x70, 0x30, 0x63, 0xd3, 0x04, 0x63, 0xca, 0x13,
	0x25, 0x12, 0x45, 0xf3, 0xae, 0x23, 0x16, 0x62, 0xb3, 0xd2, 0x26, 0xdd, 0x6d, 0x77, 0xcf, 0x00,
	0x1f, 0x75, 0xfc, 0x42, 0x87, 0xcf, 0x59, 0x88, 0xd6, 0x6b, 0x68, 0x05, 0xd1, 0x38, 0x18, 0x95,
	0x6b, 0xab, 0x5a, 0xbb, 0x9f, 0x13, 0x4b, 0xe2, 0x63, 0x38, 0xd0, 0xc6, 0x94, 0x6a, 0x37, 0x4d,
	0x5d, 0x03, 0x2c, 0x4a, 0x3b, 0x3f, 0x08, 0xec, 0x9e, 0x05, 0xb7, 0x38, 0xfe, 0x97, 0xb9, 0x1d,
	0xa8, 0xe9, 0xf4, 0x7a, 0xc6, 0xba, 0xf3, 0xb8, 0xc8, 0x9a, 0x5a, 0x9f, 0xb2, 0xb0, 0x4e, 0xec,
	0x1a, 0xd4, 0x7a, 0x03, 0x3b, 0x63, 0xf4, 0x58, 0x32, 0x55, 0x54, 0x5b, 0xa2, 0x67, 0xac, 0x3b,
	0xfb, 0xcb, 0x5a, 0x23, 0xfb, 0x3f, 0xa7, 0x2f, 0x33, 0x78, 0xbd, 0xd3, 0x9b, 0xeb, 0x9c, 0xee,
	0x7c, 0xcb, 0x26, 0x36, 0x93, 0xbe, 0x2d, 0xde, 0x47, 0xeb, 0x1c, 0x1e, 0x79, 0x99, 0x13, 0x74,
	0x8a, 0x11, 0xf5, 0x0c, 0xa1, 0xa7, 0xaf, 0x3b, 0xed, 0x62, 0x57, 0x65, 0x76, 0x0d, 0x36, 0xdc,
	0x86, 0x37, 0x7f, 0x6e, 0x0d, 0xa0, 0x31, 0x63, 0x72, 0x2e, 0x9b, 0xf1, 0xe7, 0x49, 0x31, 0xdb,
	0xf2, 0x95, 0x1b, 0x6c, 0xb8, 0x3b, 0xb3, 0xe2, 0x69, 0xff, 0x3f, 0xd8, 0x32, 0x4f, 0xa7, 0xf3,
	0x9d, 0x40, 0xeb, 0xd4, 0x3c, 0xaa, 0xa1, 0x7e, 0x53, 0xf3, 0x23, 0x7c, 0x86, 0x7a, 0x5e, 0x8a,
	0x86, 0x4c, 0x34, 0x49, 0xbb, 0xda, 0xad, 0x3b, 0x47, 0xc5, 0x72, 0xab, 0xc5, 0xbd, 0xbc, 0xda,
	0x07, 0x26, 0x4e, 0x23, 0x25, 0x53, 0x17, 0xbc, 0xbb, 0x83, 0x16, 0x85, 0xc6, 0x42, 0xd8, 0x7a,
	0x08, 0xd5, 0x09, 0xa6, 0xda, 0xa0, 0x6d, 0x37, 0xfb, 0x6b, 0x1d, 0x41, 0xcd, 0x7c, 0xca, 0x4a,
	0x89, 0x69, 0x25, 0x8e, 0xbb, 0x06, 0x3f, 0xa9, 0xbc, 0x22, 0xfd, 0xaf, 0x04, 0xf6, 0xb8, 0xf4,
	0x8b, 0x92, 0x7c, 0x79, 0xf4, 0xdb, 0xab, 0x7b, 0xd6, 0x7e, 0xc5, 0x43, 0xf2, 0xa5, 0xef, 0x07,
	0xea, 0x3a, 0xb9, 0xea, 0x8d, 0x78, 0x68, 0x8f, 0x25, 0xa6, 0x7f, 0x56, 0x40, 0x96, 0xe8, 0x30,
	0x46, 0x39, 0x0b, 0x22, 0xff, 0xd0, 0xe7, 0xb6, 0x98, 0xf8, 0xf6, 0x8a, 0x65, 0xf5, 0x8b, 0x90,
	0xab, 0x2d, 0xbd, 0x0a, 0x5e, 0xfe, 0x0e, 0x00, 0x00, 0xff, 0xff, 0xa5, 0x43, 0x18, 0xb5, 0xd1,
	0x04, 0x00, 0x00,
}
