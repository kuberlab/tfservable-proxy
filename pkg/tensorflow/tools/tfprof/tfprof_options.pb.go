// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tensorflow/tools/tfprof/tfprof_options.proto

package tfprof

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Refers to tfprof_options.h/cc for documentation.
// Only used to pass tfprof options from Python to C++.
type OptionsProto struct {
	MaxDepth               *int64   `protobuf:"varint,1,opt,name=max_depth,json=maxDepth" json:"max_depth,omitempty"`
	MinBytes               *int64   `protobuf:"varint,2,opt,name=min_bytes,json=minBytes" json:"min_bytes,omitempty"`
	MinMicros              *int64   `protobuf:"varint,3,opt,name=min_micros,json=minMicros" json:"min_micros,omitempty"`
	MinParams              *int64   `protobuf:"varint,4,opt,name=min_params,json=minParams" json:"min_params,omitempty"`
	MinFloatOps            *int64   `protobuf:"varint,5,opt,name=min_float_ops,json=minFloatOps" json:"min_float_ops,omitempty"`
	MinOccurrence          *int64   `protobuf:"varint,17,opt,name=min_occurrence,json=minOccurrence" json:"min_occurrence,omitempty"`
	Step                   *int64   `protobuf:"varint,18,opt,name=step,def=-1" json:"step,omitempty"`
	OrderBy                *string  `protobuf:"bytes,7,opt,name=order_by,json=orderBy" json:"order_by,omitempty"`
	AccountTypeRegexes     []string `protobuf:"bytes,8,rep,name=account_type_regexes,json=accountTypeRegexes" json:"account_type_regexes,omitempty"`
	StartNameRegexes       []string `protobuf:"bytes,9,rep,name=start_name_regexes,json=startNameRegexes" json:"start_name_regexes,omitempty"`
	TrimNameRegexes        []string `protobuf:"bytes,10,rep,name=trim_name_regexes,json=trimNameRegexes" json:"trim_name_regexes,omitempty"`
	ShowNameRegexes        []string `protobuf:"bytes,11,rep,name=show_name_regexes,json=showNameRegexes" json:"show_name_regexes,omitempty"`
	HideNameRegexes        []string `protobuf:"bytes,12,rep,name=hide_name_regexes,json=hideNameRegexes" json:"hide_name_regexes,omitempty"`
	AccountDisplayedOpOnly *bool    `protobuf:"varint,13,opt,name=account_displayed_op_only,json=accountDisplayedOpOnly" json:"account_displayed_op_only,omitempty"`
	Select                 []string `protobuf:"bytes,14,rep,name=select" json:"select,omitempty"`
	Output                 *string  `protobuf:"bytes,15,opt,name=output" json:"output,omitempty"`
	DumpToFile             *string  `protobuf:"bytes,16,opt,name=dump_to_file,json=dumpToFile" json:"dump_to_file,omitempty"`
	XXX_unrecognized       []byte   `json:"-"`
}

func (m *OptionsProto) Reset()                    { *m = OptionsProto{} }
func (m *OptionsProto) String() string            { return proto.CompactTextString(m) }
func (*OptionsProto) ProtoMessage()               {}
func (*OptionsProto) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

const Default_OptionsProto_Step int64 = -1

func (m *OptionsProto) GetMaxDepth() int64 {
	if m != nil && m.MaxDepth != nil {
		return *m.MaxDepth
	}
	return 0
}

func (m *OptionsProto) GetMinBytes() int64 {
	if m != nil && m.MinBytes != nil {
		return *m.MinBytes
	}
	return 0
}

func (m *OptionsProto) GetMinMicros() int64 {
	if m != nil && m.MinMicros != nil {
		return *m.MinMicros
	}
	return 0
}

func (m *OptionsProto) GetMinParams() int64 {
	if m != nil && m.MinParams != nil {
		return *m.MinParams
	}
	return 0
}

func (m *OptionsProto) GetMinFloatOps() int64 {
	if m != nil && m.MinFloatOps != nil {
		return *m.MinFloatOps
	}
	return 0
}

func (m *OptionsProto) GetMinOccurrence() int64 {
	if m != nil && m.MinOccurrence != nil {
		return *m.MinOccurrence
	}
	return 0
}

func (m *OptionsProto) GetStep() int64 {
	if m != nil && m.Step != nil {
		return *m.Step
	}
	return Default_OptionsProto_Step
}

func (m *OptionsProto) GetOrderBy() string {
	if m != nil && m.OrderBy != nil {
		return *m.OrderBy
	}
	return ""
}

func (m *OptionsProto) GetAccountTypeRegexes() []string {
	if m != nil {
		return m.AccountTypeRegexes
	}
	return nil
}

func (m *OptionsProto) GetStartNameRegexes() []string {
	if m != nil {
		return m.StartNameRegexes
	}
	return nil
}

func (m *OptionsProto) GetTrimNameRegexes() []string {
	if m != nil {
		return m.TrimNameRegexes
	}
	return nil
}

func (m *OptionsProto) GetShowNameRegexes() []string {
	if m != nil {
		return m.ShowNameRegexes
	}
	return nil
}

func (m *OptionsProto) GetHideNameRegexes() []string {
	if m != nil {
		return m.HideNameRegexes
	}
	return nil
}

func (m *OptionsProto) GetAccountDisplayedOpOnly() bool {
	if m != nil && m.AccountDisplayedOpOnly != nil {
		return *m.AccountDisplayedOpOnly
	}
	return false
}

func (m *OptionsProto) GetSelect() []string {
	if m != nil {
		return m.Select
	}
	return nil
}

func (m *OptionsProto) GetOutput() string {
	if m != nil && m.Output != nil {
		return *m.Output
	}
	return ""
}

func (m *OptionsProto) GetDumpToFile() string {
	if m != nil && m.DumpToFile != nil {
		return *m.DumpToFile
	}
	return ""
}

func init() {
	proto.RegisterType((*OptionsProto)(nil), "tensorflow.tfprof.OptionsProto")
}

func init() { proto.RegisterFile("tensorflow/tools/tfprof/tfprof_options.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 443 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0xd2, 0xcf, 0x6b, 0xdb, 0x30,
	0x14, 0xc0, 0x71, 0xd2, 0x64, 0x6b, 0xa2, 0xa6, 0x3f, 0x22, 0x46, 0x50, 0x19, 0x83, 0x50, 0x18,
	0x84, 0xd1, 0xc4, 0xdb, 0x71, 0x3b, 0x86, 0xd0, 0xdb, 0x96, 0x62, 0x7a, 0xda, 0x45, 0x28, 0xf6,
	0x8b, 0x23, 0x6a, 0xe9, 0x09, 0x49, 0x5e, 0xe3, 0x3f, 0x7c, 0xf7, 0x21, 0xd9, 0x49, 0x96, 0x42,
	0x4f, 0xe6, 0xbd, 0xef, 0xc7, 0x06, 0x0b, 0x91, 0x7b, 0x0f, 0xda, 0xa1, 0xdd, 0x94, 0xf8, 0x92,
	0x78, 0xc4, 0xd2, 0x25, 0x7e, 0x63, 0x2c, 0x6e, 0xda, 0x07, 0x47, 0xe3, 0x25, 0x6a, 0x37, 0x37,
	0x16, 0x3d, 0xd2, 0xd1, 0x51, 0xcf, 0x1b, 0x70, 0xf7, 0xb7, 0x47, 0x86, 0xab, 0x06, 0x3d, 0x46,
	0xf3, 0x91, 0x0c, 0x94, 0xd8, 0xf1, 0x1c, 0x8c, 0xdf, 0xb2, 0xce, 0xa4, 0x33, 0xed, 0xa6, 0x7d,
	0x25, 0x76, 0xcb, 0x30, 0xc7, 0x28, 0x35, 0x5f, 0xd7, 0x1e, 0x1c, 0x3b, 0x6b, 0xa3, 0xd4, 0x8b,
	0x30, 0xd3, 0x4f, 0x84, 0x84, 0xa8, 0x64, 0x66, 0xd1, 0xb1, 0x6e, 0xac, 0x81, 0xff, 0x8c, 0x8b,
	0x7d, 0x36, 0xc2, 0x0a, 0xe5, 0x58, 0xef, 0x90, 0x1f, 0xe3, 0x82, 0xde, 0x91, 0xcb, 0x90, 0x37,
	0x25, 0x0a, 0xcf, 0xd1, 0x38, 0xf6, 0x2e, 0x8a, 0x0b, 0x25, 0xf5, 0x43, 0xd8, 0xad, 0x8c, 0xa3,
	0x9f, 0xc9, 0x55, 0x30, 0x98, 0x65, 0x95, 0xb5, 0xa0, 0x33, 0x60, 0xa3, 0x88, 0xc2, 0x9b, 0xab,
	0xc3, 0x92, 0x8e, 0x49, 0xcf, 0x79, 0x30, 0x8c, 0x86, 0xf8, 0xe3, 0x6c, 0xf6, 0x2d, 0x8d, 0x33,
	0xbd, 0x25, 0x7d, 0xb4, 0x39, 0x58, 0xbe, 0xae, 0xd9, 0xf9, 0xa4, 0x33, 0x1d, 0xa4, 0xe7, 0x71,
	0x5e, 0xd4, 0xf4, 0x2b, 0xf9, 0x20, 0xb2, 0x0c, 0x2b, 0xed, 0xb9, 0xaf, 0x0d, 0x70, 0x0b, 0x05,
	0xec, 0xc0, 0xb1, 0xfe, 0xa4, 0x3b, 0x1d, 0xa4, 0xb4, 0x6d, 0x4f, 0xb5, 0x81, 0xb4, 0x29, 0xf4,
	0x9e, 0x50, 0xe7, 0x85, 0xf5, 0x5c, 0x0b, 0x75, 0xf4, 0x83, 0xe8, 0x6f, 0x62, 0xf9, 0x25, 0xd4,
	0x41, 0x7f, 0x21, 0x23, 0x6f, 0xa5, 0x3a, 0xc5, 0x24, 0xe2, 0xeb, 0x10, 0x5e, 0x59, 0xb7, 0xc5,
	0x97, 0x53, 0x7b, 0xd1, 0xd8, 0x10, 0x5e, 0xd9, 0xad, 0xcc, 0xe1, 0xd4, 0x0e, 0x1b, 0x1b, 0xc2,
	0xff, 0xf6, 0x3b, 0xb9, 0xdd, 0xff, 0x63, 0x2e, 0x9d, 0x29, 0x45, 0x0d, 0x39, 0x47, 0xc3, 0x51,
	0x97, 0x35, 0xbb, 0x9c, 0x74, 0xa6, 0xfd, 0x74, 0xdc, 0x82, 0xe5, 0xbe, 0xaf, 0xcc, 0x4a, 0x97,
	0x35, 0x1d, 0x93, 0xf7, 0x0e, 0x4a, 0xc8, 0x3c, 0xbb, 0x8a, 0xdf, 0x6e, 0xa7, 0xb0, 0xc7, 0xca,
	0x9b, 0xca, 0xb3, 0xeb, 0x78, 0x9e, 0xed, 0x44, 0x27, 0x64, 0x98, 0x57, 0xca, 0x70, 0x8f, 0x7c,
	0x23, 0x4b, 0x60, 0x37, 0xb1, 0x92, 0xb0, 0x7b, 0xc2, 0x07, 0x59, 0xc2, 0x62, 0xf9, 0x7b, 0x51,
	0x48, 0xbf, 0xad, 0xd6, 0xf3, 0x0c, 0x55, 0x92, 0x5b, 0xa8, 0x9f, 0x93, 0xe3, 0xed, 0x9c, 0x39,
	0xb0, 0x7f, 0xa4, 0x2e, 0x66, 0x05, 0x26, 0xe6, 0xb9, 0x48, 0xde, 0xb8, 0xe5, 0xff, 0x02, 0x00,
	0x00, 0xff, 0xff, 0x87, 0x3a, 0xf9, 0xed, 0xff, 0x02, 0x00, 0x00,
}
